/* Basic Styling */
body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background-color: #222;
    margin: 0;
    perspective: 1000px; /* Sets the perspective depth for the 3D scene */
    overflow: hidden; /* Prevent scrollbars from dragon movement */
}

/* === Instruction Dialog Styles === */
#instructions {
    position: fixed; /* Keep it in view */
    top: 20px; /* Position from top */
    left: 50%; /* Center horizontally */
    transform: translateX(-50%); /* Adjust for centering */
    background-color: rgba(50, 50, 80, 0.85); /* Dark blueish background */
    color: #eee;
    padding: 15px 30px;
    border-radius: 10px;
    border: 1px solid #aaa;
    z-index: 101; /* Above score and dragons */
    font-family: sans-serif;
    text-align: center;
    box-shadow: 0 4px 15px rgba(0,0,0,0.4);
    display: block; /* Initially visible */
    max-width: 80%;
}
#instructions p {
    margin: 0 0 10px 0; /* Space below text */
    font-size: 16px;
}
#instructions button#close-instructions {
    position: absolute;
    top: 5px;
    right: 8px;
    background: none;
    border: none;
    color: #ccc;
    font-size: 24px;
    cursor: pointer;
    line-height: 1;
    padding: 0 5px;
}
#instructions button#close-instructions:hover {
    color: #fff;
}
#instructions.hidden {
    display: none; /* Class to hide the instructions */
}

/* === Score Display Styles === */
#score-display {
    position: fixed;
    top: 80px; /* Adjusted position below instructions */
    left: 20px;
    background-color: rgba(0, 0, 0, 0.7);
    color: white;
    padding: 10px 15px;
    border-radius: 8px;
    font-size: 24px;
    font-family: sans-serif;
    z-index: 100; /* Ensure score is on top (below instructions) */
    user-select: none;
}

/* === Floating Dragon Styles === */
.floating-dragon {
    position: absolute; /* Needed for JS positioning via transform */
    /* DO NOT set top/left here - JS handles initial position */
    font-size: 50px;    /* Base size - can be overridden */
    color: rgba(100, 200, 100, 0.6); /* Default color */
    /* z-index: -1; */ /* Base z-index, overridden during drag/capture */
    user-select: none;
    cursor: grab;
    transform-origin: center center; /* Helps rotation look centered */
    /* Animation is now handled by JavaScript */
    will-change: transform; /* Hint for performance */
}

/* Specific dragon appearances (size, color) - NO POSITION OR ANIMATION */
.dragon-1 { font-size: 55px; opacity: 0.6; }
.dragon-2 { font-size: 40px; color: rgba(150, 250, 150, 0.5); }
.dragon-3 { font-size: 60px; opacity: 0.5; }
.dragon-4 { font-size: 45px; color: rgba(50, 150, 50, 0.6); }

/* Style for when a dragon is being actively dragged */
.floating-dragon.dragging {
    cursor: grabbing;
    opacity: 0.9;
    /* transform: scale(1.1);  -- scaling now part of main transform in JS drag */
    z-index: 99; /* Bring dragged dragon above others, but below score/dialog */
    /* No animation-play-state needed */
}

/* Style for captured dragons */
.floating-dragon.captured {
    display: none; /* Simplest way to "capture" */
    z-index: -1; /* Ensure they stay behind if made visible later */
}

/* === Cube Styles === */
/* Scene Container - Holds the cube */
.scene {
    width: 200px; /* Cube dimensions */
    height: 200px;
    position: relative; /* Needed for z-index stacking context */
    z-index: 1; /* Make sure the cube scene is above default dragon z-index */
    transform-style: preserve-3d; /* Ensures children maintain 3D positioning */
    animation: rotate-cube 25s infinite linear; /* Apply rotation animation */
}

/* The Cube itself - container for the faces */
.cube {
    width: 100%;
    height: 100%;
    position: absolute;
    transform-style: preserve-3d;
}

/* Styling for each face */
.cube__face {
    position: absolute;
    width: 200px;
    height: 200px;
    border: 1px solid #ccc;
    background-size: cover;
    background-position: center;
    color: white;
    font-size: 18px;
    font-weight: bold;
    text-align: center;
    background-color: rgba(50, 50, 50, 0.7);
    display: flex;
    justify-content: center;
    align-items: center;
    text-decoration: none;
    transition: box-shadow 0.5s; /* Smooth transitions for hover */
}
/* Hover effect for faces */
.cube__face:hover {
    box-shadow: 0 0 25px rgba(0, 255, 255, 0.7); /* Glow effect */
    /* transform: scale3d(1.05, 1.05, 1.05); */ /* Scaling interferes with rotation/position */
    /* z-index: 10; */ /* Can cause issues with rotation visibility */
}
/* Positioning Each Face */
.cube__face--front { background-image: url('https://source.unsplash.com/random/200x200?nature'); transform: rotateY(0deg) translateZ(100px); }
.cube__face--back { background-image: url('https://source.unsplash.com/random/200x200?city'); transform: rotateY(180deg) translateZ(100px); }
.cube__face--right { background-image: url('https://source.unsplash.com/random/200x200?technology'); transform: rotateY(90deg) translateZ(100px); }
.cube__face--left { background-image: url('https://source.unsplash.com/random/200x200?space'); transform: rotateY(-90deg) translateZ(100px); }
.cube__face--top { background-image: url('https://source.unsplash.com/random/200x200?sky'); transform: rotateX(90deg) translateZ(100px); }
.cube__face--bottom { background-image: url('https://source.unsplash.com/random/200x200?water'); transform: rotateX(-90deg) translateZ(100px); }

/* Keyframes for the cube rotation animation */
@keyframes rotate-cube {
    from { transform: rotateX(0deg) rotateY(0deg); }
    to   { transform: rotateX(360deg) rotateY(360deg); }
}